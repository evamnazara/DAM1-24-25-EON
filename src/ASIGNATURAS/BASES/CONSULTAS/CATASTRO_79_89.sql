-- 79. Muestra nombre de zona, y observaciones para todas las zonas urbanas. En el caso de que no haya información en el campo observaciones debe mostrar "No hay observaciones".

SELECT 
    Z.NOMBREZONA, 
    ISNULL(Z.OBSERVACIONES, 'No hay observaciones') AS OBSERVACIONES
FROM 
    ZONAURBANA Z;

-- 80. Obtén una relación de propietarios de viviendas unifamiliares (DNI, nombre y apellidos, nombre_zona, calle) por cada zona urbana y ordénalos por los dos últimos caracteres de la zona urbana y dentro de esto por el nombre de la calle.
-- subconsulta

SELECT 
    P.DNI, 
    P.NOMBRE + ' ' + P.APELLIDO1 + ' ' + ISNULL(P.APELLIDO2, ' ') AS NOMBRECOMPLETO, 
    (SELECT V.NOMBREZONA FROM VIVIENDA V WHERE V.CALLE = CP.CALLE AND V.NUMERO = CP.NUMERO) AS NOMBREZONA,
    CP.CALLE + ', ' + CAST(CP.NUMERO AS VARCHAR(3)) AS DIRECCION
FROM 
    PROPIETARIO P
INNER JOIN 
    CASAPARTICULAR CP ON P.DNI = CP.DNIPROPIETARIO
WHERE 
    EXISTS (SELECT 1 FROM VIVIENDA V WHERE V.CALLE = CP.CALLE AND V.NUMERO = CP.NUMERO)
ORDER BY 
    RIGHT((SELECT V.NOMBREZONA FROM VIVIENDA V WHERE V.CALLE = CP.CALLE AND V.NUMERO = CP.NUMERO), 2), 
    CP.CALLE;


--multitabtla
SELECT 
    P.DNI, 
    P.NOMBRE + ' ' + P.APELLIDO1 + ' ' + ISNULL(P.APELLIDO2,' ') AS NOMBRECOMPLETO, 
    Z.NOMBREZONA, 
    CP.CALLE + ', ' + CAST(CP.NUMERO AS VARCHAR(3)) AS DIRECCION
FROM 
    PROPIETARIO P

    INNER JOIN CASAPARTICULAR CP ON P.DNI = CP.DNIPROPIETARIO
    INNER JOIN VIVIENDA V ON CP.CALLE = V.CALLE AND CP.NUMERO = V.NUMERO
    INNER JOIN ZONAURBANA Z ON V.NOMBREZONA = Z.NOMBREZONA

ORDER BY 
    RIGHT(Z.NOMBREZONA, 2), 
    V.CALLE;


-- 81. Sorteo entre propietarios de pisos, seleccionando 2 propietarios al azar.

SELECT TOP 2 
    PR.DNI, 
    PR.NOMBRE + ' ' + PR.APELLIDO1 + ' ' + ISNULL(PR.APELLIDO2,' ') AS NOMBRECOMPLETO
FROM PROPIETARIO PR
    INNER JOIN PISO P ON PR.DNI = P.DNIPROPIETARIO

-- 82. Relación de pisos en zonas con más de un parque y vivienda unifamiliar.

SELECT 
    P.CALLE, 
    P.NUMERO, 
    P.PLANTA, 
    P.PUERTA, 
    P.NUMHABITACIONES, 
    P.METROSUTILES, 
    PR.NOMBRE + ' ' + PR.APELLIDO1 + ' ' + ISNULL(PR.APELLIDO2, ' ') AS PROPIETARIO,
    
    CASE 
        WHEN P.NUMHABITACIONES BETWEEN 1 AND 2 THEN 'APARTAMENTO'
        WHEN P.NUMHABITACIONES BETWEEN 3 AND 4 THEN 'PISO'
        ELSE 'PISAZO' 
    END AS TIPO_PISO
FROM PISO P

    INNER JOIN PROPIETARIO PR ON P.DNIPROPIETARIO = PR.DNI
    INNER JOIN VIVIENDA V ON P.CALLE = V.CALLE AND P.NUMERO = V.NUMERO
    INNER JOIN  ZONAURBANA Z ON V.NOMBREZONA = Z.NOMBREZONA
WHERE 
    Z.NUMPARQUES > 1 AND 
    EXISTS (SELECT 1 FROM VIVIENDA V2 WHERE V2.NOMBREZONA = V.NOMBREZONA AND V2.TIPOVIVIENDA = 'Casa')
ORDER BY 
    P.NUMHABITACIONES;

-- 83. Información sobre propietarios y sus viviendas.

SELECT 
    P.NOMBRE + ' ' + P.APELLIDO1 + ' ' + P.APELLIDO2 + ' posee un ' + 
    CASE 
        WHEN Pi.CALLE IS NOT NULL THEN 'piso' 
        ELSE 'casa' 
    END + ' en la calle ' + ISNULL(Pi.CALLE, V.CALLE) + ' n° ' + 
    ISNULL(CAST(Pi.NUMERO AS VARCHAR), CAST(V.NUMERO AS VARCHAR))
FROM 
    PROPIETARIO P

    LEFT JOIN PISO Pi ON P.DNI = Pi.DNIPROPIETARIO
    LEFT JOIN CASAPARTICULAR V ON P.DNI = V.DNIPROPIETARIO;

-- 84. Listado de casas unifamiliares y pisos ordenado por tipo.

SELECT * FROM
((SELECT 
    P.CALLE, P.NUMERO, P.PLANTA, P.PUERTA, P.NUMHABITACIONES, NULL AS PISCINA, P.METROSUTILES AS METROS
FROM PISO P)
UNION
(SELECT 
    CP.CALLE, CP.NUMERO, NULL AS PLANTA, NULL AS PUERTA, NULL AS NUMHABITACIONES, CP.PISCINA, V.METROSSOLAR AS METROS
FROM CASAPARTICULAR CP
    INNER JOIN VIVIENDA V ON CP.CALLE = V.CALLE 
        AND CP.NUMERO = V.NUMERO)) AS T
ORDER BY 
    CASE 
        WHEN NUMHABITACIONES IS NOT NULL THEN NUMHABITACIONES 
        ELSE METROS
    END;

-- 85. ¿Quién posee más pisos, hombres o mujeres?

SELECT PR.SEXO, COUNT(P.CALLE) AS NUM_PISOS
FROM PROPIETARIO PR
    LEFT JOIN PISO P ON PR.DNI = P.DNIPROPIETARIO
GROUP BY PR.SEXO
ORDER BY NUM_PISOS DESC;

-- 89. Media de salarios sin considerar valores extremos.

SELECT AVG(SALARIO) AS MEDIA_SALARIO
FROM EMPREGADOFIXO
WHERE 
    SALARIO NOT IN (SELECT MAX(SALARIO) FROM EMPREGADOFIXO)
    AND 
    SALARIO NOT IN (SELECT MIN(SALARIO) FROM EMPREGADOFIXO);
